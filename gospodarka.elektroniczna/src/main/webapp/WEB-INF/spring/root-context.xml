<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">
    
    <!-- Konfiguracja Spring Security -->
	<security:http auto-config="true" use-expressions="true">
		<security:form-login login-page="/app/login" login-processing-url="/app/j_spring_security_check" 
			default-target-url="/app/redirect" always-use-default-target="true" 
			authentication-failure-url="/app/login?login_error=1" 
			username-parameter="username" password-parameter="password"/>
		<security:logout logout-url="/app/logout" logout-success-url="/app/login"/>
	</security:http>
	
	<!-- Wersja docelowa CustomAuthenticationProvider -->
	 <security:authentication-manager>
		<security:authentication-provider ref="authenticationProvider" />
	</security:authentication-manager> 
	
	<!-- MOCK
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="kadry" password="kadry" authorities="ROLE_HR" />
				<security:user name="produkcja" password="produkcja" authorities="ROLE_MANUFACTURE" />
				<security:user name="finanse" password="finanse" authorities="ROLE_FINANCE" />
				<security:user name="serwis" password="serwis" authorities="ROLE_SERVIS" />
				<security:user name="magazyn" password="magazyn" authorities="ROLE_STOREHOUSE" />
				<security:user name="obsluga" password="obsluga" authorities="ROLE_CUSTOMER_SERVICE" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	 -->
	<bean id="authenticationProvider" class="gospodarka.elektroniczna.security.CustomAuthenticationProvider">
		<property name="encryptor">
			<bean class="gospodarka.elektroniczna.services.encrypt.SHA512Encryptor"/>
		</property>
		<property name="userService" ref="userService"/>
	</bean>

	<!-- Pozostałe beany -->
	
	<!-- Fabryka sesji Hibernate -->
	<bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:configLocation="classpath:hibernate.cfg.xml"/>
		
	<!-- Serwisy -->
	<bean id="userService" class="gospodarka.elektroniczna.services.user.UserService" p:userDao-ref="userDao"/>
	
	<bean id="signatureService" class="gospodarka.elektroniczna.services.signature.SignatureService" 
		p:signatureDao-ref="signatureDAO"/>
		
	<bean id="documentService" class="gospodarka.elektroniczna.services.document.DocumentService"
		p:documentHeaderService-ref="documentHeaderService"
		p:documentContentSerialization-ref="documentContentSerialization"
		p:archivalDocumentDao-ref="archivalDocumentDao"
		p:currentDocumentDao-ref="currentDocumentDao"
		p:departmentDao-ref="departmentDao"
		p:documentHeaderDao-ref="documentHeaderDao"/>
		
	<bean id="documentHeaderService" class="gospodarka.elektroniczna.services.document.DocumentHeaderService"
		p:documentHeaderDao-ref="documentHeaderDao"
		p:documentTypeDao-ref="documentTypeDao"
		p:signatureService-ref="signatureService"/>
		
	<bean id="documentContentSerialization" 
		class="gospodarka.elektroniczna.services.document.content.DocumentContentSerialization">
		<property name="converters">
			<map>
				<entry key="TEST" value-ref="testDocService"/>
			</map>
		</property>
	</bean>
	
	<!-- Serwisy - poszczególne dokumenty -->
	<bean id="testDocService" class="gospodarka.elektroniczna.services.document.content.TestDocumentContentService"/>
	
	<!-- DAO -->
	<bean id="signatureDAO" class="gospodarka.elektroniczna.dao.signature.SignatureDao" 
		p:sessionFactory-ref="hibernateSessionFactory"/>
		
	<bean id="userDao" class="gospodarka.elektroniczna.dao.user.UserDao"
		p:sessionFactory-ref="hibernateSessionFactory"/>
		
	<bean id="documentHeaderDao" class="gospodarka.elektroniczna.dao.documenttype.DocumentHeaderDao"
		p:sessionFactory-ref="hibernateSessionFactory"/>
		
	<bean id="documentTypeDao" class="gospodarka.elektroniczna.dao.documenttype.DocumentTypeDao"
		p:sessionFactory-ref="hibernateSessionFactory"/>
		
	<bean id="archivalDocumentDao" class="gospodarka.elektroniczna.dao.content.ArchivalContentDao"
		p:sessionFactory-ref="hibernateSessionFactory" />
	
	<bean id="currentDocumentDao" class="gospodarka.elektroniczna.dao.content.CurrentContentDao"
		p:sessionFactory-ref="hibernateSessionFactory" />	
		
	<bean id="departmentDao" class="gospodarka.elektroniczna.dao.department.DepartmentDao"
		p:sessionFactory-ref="hibernateSessionFactory" />
		
	<!-- Wstrzykiwanie loggerów -->
	<bean class="gospodarka.elektroniczna.annotations.LoggerPostProcessor">
		<constructor-arg name="loggerFactory">
			<bean class="gospodarka.elektroniczna.annotations.LoggerFactory" />
		</constructor-arg>
	</bean>
	
	<bean id="usernameExtractor" class="gospodarka.elektroniczna.common.beans.UsernameExtractorBean" lazy-init="false"/>
	
	<bean id="redirectBean" class="gospodarka.elektroniczna.common.beans.RedirectBean" 
		p:springSecurityContextUtil-ref="springSecurityContextUtilBean"
		p:prefix="redirect:/app/" p:rootRole="ROLE_ROOT">
		<property name="redirects">
			<map>
				<entry key="ROLE_ROOT" value="root" />
				<entry key="ROLE_HR" value="hr" />
				<entry key="ROLE_MANUFACTURE" value="manufacture" />
				<entry key="ROLE_FINANCE" value="finance" />
				<entry key="ROLE_SERVIS" value="service" />
				<entry key="ROLE_STOREHOUSE" value="storehouse" />
				<entry key="ROLE_CUSTOMER_SERVICE" value="customerService" />
			</map>
		</property>
	</bean>
	
	<bean id="springSecurityContextUtilBean" class="gospodarka.elektroniczna.common.beans.SpringSecurityContextUtilBean" 
		lazy-init="false"/>
</beans>